{"version":3,"sources":["common/CommonButton/CommonButton.module.css","common/CommonInput/CommonInput.module.css","messages/Message.tsx","common/CommonInput/CommonInput.tsx","common/CommonButton/CommonButton.tsx","toDoList/ToDoList.tsx","input/Input.tsx","common/CommonComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","src","alt","name","text","CommonInput","error","style","wrapper","errorInput","input","placeholder","onChange","onKeyPress","CommonButton","type","btn","btnBg","deleteBtn","onClick","value","ToDoList","reverse","id","priority","useState","list","setList","map","x","key","e","filter","prior","option","currentTarget","indexOf","Input","setInput","usersArray","setUsersArray","onClickHandler","trim","alert","nameUser","v1","push","addName","console","log","charCode","length","CommonComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b731e9a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"CommonButton_btn__3l3aZ\",\"btnBg\":\"CommonButton_btnBg__702iI\",\"deleteBtn\":\"CommonButton_deleteBtn__24mWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CommonInput_wrapper__1Snhs\",\"input\":\"CommonInput_input__pIH_c\",\"errorInput\":\"CommonInput_errorInput__17h7m\"};","import React from \"react\";\nimport './Message.css'\n\ntype MessagePropsType = {\n    name: string,\n    text: string,\n\n}\n\nfunction Message(props: MessagePropsType) {\n\n    return (\n        <div><h1 className=\"text-center\">Homework #1</h1>\n            <div className=\"row p-4 message__block mx-auto\">\n                <div className=\"img__wrapper col-md-2\">\n                    <img className=\"message-img  rounded-circle mx-auto d-block \"\n                         src=\"https://i.ytimg.com/vi/fUWrhetZh9M/maxresdefault.jpg\" alt=\"avatar\"/>\n                </div>\n                <div className=\"message__box message col-md-auto d-flex\">\n                    <div className=\"message__box__wrapper d-flex flex-column p-2 \">\n                        <h4 className=\"message__box-title text-left text-wrap d-inline\"> {props.name} </h4>\n                        <p className=\"message__box-text text-left text-wrap\"> {props.text} </p>\n                    </div>\n                    <div className=\"message__box-time align-self-end\">\n                        <span className=\"message-time \"> 20:00 </span>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Message;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport style from './CommonInput.module.css'\n\ntype CommonInputPropsType = {\n    value?: string\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\n    onKeyPress?: (e: KeyboardEvent<HTMLInputElement>) => void\n    error?: string\n}\n\nexport function CommonInput(props: CommonInputPropsType) {\n    return (<div className={props.error ? style.wrapper + ' ' +  style.errorInput : style.wrapper}>\n        <input className={style.input} placeholder={props.error? props.error: \"Enter text\"}\n               onChange={props.onChange}\n               onKeyPress={props.onKeyPress}/>\n    </div>)\n}\n","import React from \"react\";\nimport style from './CommonButton.module.css'\n\ntype CommonButtonPropsType = {\n    value: string\n    onClick?: () => void\n    type?: ButtonActionType\n}\n\ntype ButtonActionType = \"submit\" | \"delete\"\n// запитати як по дефолту ставити значення в батоні\n\nexport function CommonButton(props: CommonButtonPropsType) {\n    return (\n        <div>\n            <button\n                className={props.type === \"delete\" ? (style.btn + \" \" + style.btnBg + \" \" + style.deleteBtn): (style.btn + \" \" + style.btnBg)}\n                onClick={props.onClick}>{props.value}</button>\n        </div>\n    )\n}\n","import React, {useState} from \"react\";\nimport './ToDoList.css'\nimport {CommonInput} from \"../common/CommonInput/CommonInput\";\nimport {CommonButton} from \"../common/CommonButton/CommonButton\";\n\nfunction ToDoList() {\n    let reverse = [{\n        id: 0,\n        name: 'anime',\n        priority: 'low'\n    },\n        {\n            id: 1,\n            name: 'university projects',\n            priority: 'high'\n        },\n        {\n            id: 2,\n            name: 'dota',\n            priority: 'low'\n        },\n        {\n            id: 3,\n            name: 'react',\n            priority: 'high'\n        },\n        {\n            id: 4,\n            name: 'graduate work',\n            priority: 'middle'\n        },\n    ]\n\n    const [list, setList] = useState(reverse);\n\n    const filterList = (e: any) => {\n        const option = e.currentTarget.value;\n        setList(reverse.filter(value => value.priority.indexOf(option) > -1 || value.name.indexOf(option) > -1))\n        if (option === '') setList(reverse);\n    }\n\n    const deleteItem = (e: number) => {\n        setList(list.filter(x => x.id !== e));\n    }\n\n    const lowFilter = () => {\n        setList(reverse.filter(prior => prior.priority === 'low'))\n    }\n    const middleFilter = () => {\n        setList(reverse.filter(prior => prior.priority === 'middle'))\n    }\n    const hightFilter = () => {\n        setList(reverse.filter(prior => prior.priority === 'high'))\n    }\n\n    const resetHandler = () => {\n        setList(reverse)\n    }\n\n\n    return (\n        <div className=\"p-4\">\n            <h1>\n                Homework #2\n            </h1>\n            <h2>\n                ToDoList\n            </h2>\n            <ul>\n                {list.map(x => {\n                    return (<div className={'d-flex'}>\n                        <li key={x.id}><p>{x.name}; &nbsp; priority: {x.priority}</p>\n                        </li>\n                        <CommonButton type={\"delete\"} value={'X'}\n                                      onClick={() => deleteItem(x.id)}/>\n                    </div>)\n                })}\n            </ul>\n            <div className={'d-flex'}>\n            <CommonButton value={'low'} onClick={lowFilter}/>\n            <CommonButton value={'middle'}\n                          onClick={middleFilter}/>\n            <CommonButton value={'hight'}\n                          onClick={hightFilter}/>\n            <CommonButton value={'reset'} onClick={resetHandler}/>\n            </div>\n            <br/>\n            Filter <br/>\n            <CommonInput onChange={filterList}/>\n\n        </div>\n    )\n\n\n}\n\nexport default ToDoList;\n","import React, {ChangeEvent, useState, KeyboardEvent} from \"react\";\nimport {v1} from \"uuid\";\nimport {CommonInput} from \"../common/CommonInput/CommonInput\";\nimport {CommonButton} from \"../common/CommonButton/CommonButton\";\n\ntype UserNameType = {\n    id: string,\n    name: string\n}\n\nfunction Input() {\n    let [input, setInput] = useState('')\n    let [usersArray, setUsersArray] = useState<Array<UserNameType>>([])\n\n    const onClickHandler = () => {\n        if (input.trim() !== \"\") {\n            alert(input)\n            addName();\n            setInput(\"\")\n            console.log(usersArray)\n        }\n\n    }\n\n    function addName() {\n\n        let nameUser = {id: v1(), name: input}\n        usersArray.push(nameUser)\n        setUsersArray(usersArray)\n    }\n\n    const onKeyHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.charCode === 13) onClickHandler()\n    }\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setInput(e.currentTarget.value)\n    }\n\n    return (<div className=\"m-4\">\n        <h1>Homework #3</h1>\n        <CommonInput value={input} onChange={onChangeHandler} onKeyPress={onKeyHandler}/>\n        <div className={'d-flex'}>\n        <CommonButton value={'+'} onClick={onClickHandler}/>\n        <div><p className={'h3'}>{usersArray.length}</p></div>\n        </div>\n    </div>)\n}\n\nexport default Input;\n","import React from \"react\";\nimport {CommonInput} from \"./CommonInput/CommonInput\";\nimport {CommonButton} from \"./CommonButton/CommonButton\";\n\n\nexport function CommonComponent() {\n    return (\n        <div>\n            <CommonInput error={'Error asda'}/>\n            <CommonButton value={'Click now'}/>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Message from \"./messages/Message\";\nimport ToDoList from \"./toDoList/ToDoList\";\nimport Input from \"./input/Input\"\nimport {CommonComponent} from \"./common/CommonComponent\";\n\nfunction App() {\n    return (\n        <div>\n            <Message name=\"Andrej\" text=\"lorem asdadasd\n            fbsjbfjhbskhbskhbhjsb\n            jhlvbsjhbjhsbjvbs\n            jhbsjhbjasbjvbshjvba\n            sjbvjhasbhjvbasjhbvj\" />\n            <ToDoList/>\n            <Input/>\n            <CommonComponent/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}